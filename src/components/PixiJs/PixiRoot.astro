---

---

<section class="flex flex-col items-center">
    <div id="drop-area" class="flex border w-full aspect-video mt-10">
        <div id="pixi-root" class="flex w-full aspect-video"></div>
    </div>
</section>

<script>
    import { Application } from "pixi.js";
    import { goFullScreen } from "src/utils/fullScreen";
    import { PIXIMapGraph, generatePIXIGraph } from "@components/MapGraph";
    import type { MapBounds } from "@components/MapGraph/MapBounds";

    import { PIXIAppStore, PIXIGraphStore, mapBoundsStore, dropAreaStore } from "../../ts/store";
    import initializeDropAreaListerners from "../../ts/dropAreaListener";

    // Create PIXI Root App View and add it to target element
    let appContainer = document.getElementById("pixi-root")!;
    let app = new Application({ antialias: true, resizeTo: appContainer });
    appContainer.appendChild(app.view as any);
    app.stage.sortableChildren = true;
    PIXIAppStore.set(app);

    new ResizeObserver(() => {
        const mapBounds: MapBounds | null = mapBoundsStore.get();
        const PIXIGraph: PIXIMapGraph | null = PIXIGraphStore.get();

        if (PIXIGraph && mapBounds) {
            PIXIGraph.normalizeGraphPositions(
                mapBounds,
                appContainer.clientWidth,
                appContainer.clientHeight,
            );
        }
    }).observe(appContainer);

    let dropArea: HTMLElement | null = document.getElementById("drop-area");
    dropAreaStore.set(dropArea);
    initializeDropAreaListerners();

    // Fullscreen listener
    document.addEventListener(
        "keydown",
        (e) => {
            if (e.key === "Enter") {
                goFullScreen("pixi-root");
            }
        },
        false,
    );
</script>
